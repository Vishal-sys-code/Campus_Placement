String class is a C++ library that supports a lot of functionality over C style strings.

Q.) 

#include <iostream>
#include <string>
int main ()
{
 std::string str="FACE";
 int i=0;
 std::cout << str[i];
}

Output: F

Q.) 

Kindly predict the output for the given code.



#include <iostream>
#include <string>
int main ()
{
 std::string s ("Strings");
 s.pop_back();
 s.back() = '!';
 s.front()='s';
 s.at[4]='i';
 std::cout << s;
}

Output: 
ERROR [at line 30]

---------------------------------------------------------------------------------------------------

                            CAPACITY FUNCTIONS 

Q.) 
Kindly predict the possible output for the given code.



#include <iostream>
#include <string>

int main ()
{
 std::string str ("Let's try");
 std::cout<< '\n'<<str.size();
 str.shrink_to_fit();
 std::cout<< '\n'<<str.capacity();
 str.clear();
 std::cout<< '\n'<<str.size();
 std::cout<< '\n'<<str.empty();
 return 0;
}

Output:
9
15
0
1 

---------------------------------------------------------------------------------------------------

                            ITERATOR FUNCTIONS 

Q.) 

REVERSE YOUR FREIND NAME: 

Your friend wants to see the pronunciation of his/ her name when it gets reversed. Help him/ her to find the reversed string using program.

Case 1: 
Input (stdin)
Naveen Kumar

Output (stdout)
ramuK neevaN


Case 2: 
Input (stdin)
valentina

Output (stdout)
anitnelav

Case 3: 
Input (stdin)
Rose chris

Output (stdout)
sirhc esoR

----------------------------------------------------------------------------------------------

SUMMARY: 

1.) Element accessing function: []operator, at(), front(), back() 
2.) Capacity functions: size(), length(), capacity(), shrink_to_fit(), max_size(), resize(), clear(), empty()
3.) Iterator functions: begin(), end(), rbegin(), rend(), cbegin(), cend(), crbegin(), crend()
4.) The return values of capacity() and max_size() cannot be determined
5.) front() and back() cannot be applied to empty strings