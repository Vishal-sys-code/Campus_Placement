Array is a group of similar types of elements that have contiguous memory location.

Q.) 
#include<iostream>
int main(){
  int score[4];
  std::cout<<score[2];
  return 0;
}

Output: Garbage Value

Q.) 
#include <iostream>
int main(){
  int score[4] = {1, 2};
  std::cout<<score[3];
  return 0;
}

Output: 0

Q.) 
#include<iostream>
int main() 
{ 
    int arr[2] = {6, 7}; 
    std::cout<<arr[3]<<" ";
    return 0; 
} 
Output: Garbage Value

Q.) 
#include<iostream>
int main() 
{ 
  int arr[2] = {10, 20, 30, 40, 50}; 
  std::cout<<arr[0];
  return 0; 
}

Output: Error

Q.) 
#include <iostream>
int main(){
  int arr[3];
  arr[0] = 5;
  arr[1] = 4;
  arr[2] = 8;
  for(int i = 0; i < 3; i++){
    std::cout<<arr[i]<<" ";
  }
}

Output: 5 4 8

----------------------------------------------------------------------------

Q.) 
#include <iostream>
int main() {
  int arr[] = {6, 7, 8, 4, 10};
  int *ptr = arr;
  std::cout<<ptr<<" "<<&arr[0];
}

Output: Address of arr[0] and arr[0] i.e: 0x7ffd96a30480 0x7ffd96a30480

----------------------------------------------------------------------------

Q.) 
#include <iostream>
int main(){
    int arr[4] = {16, 37, 48, 87};
    int *ptr;
    ptr = arr;
    for(int i = 0; i < 4; i = i + 2){
        std::cout<<*(ptr+i)<<" ";
    }
    return 0;
}

Output: 16 48

----------------------------------------------------------------------------

Q.) 
#include <iostream>
int main()
{
  int (*ptr)[10];
  int a[10] = {9, 11, 22, 33, 44, 55, 66, 77, 88, 99};
  ptr = &a;
  std::cout<<(*ptr)[1];
}

Output: 11

----------------------------------------------------------------------------

Q.) 
#include <iostream>
int main() 
{ 
	char arr[] = {13, 25, 36, 47, 29}; 
	char *p = arr; 
	char (*ptr)[5] = &arr; 
    std::cout<<sizeof(p)<<" "<<sizeof(*p)<<"\n"; 
	std::cout<<sizeof(ptr)<<" "<<sizeof(*ptr); 
	return 0; 
} 

Output: 8 1
        8 5

----------------------------------------------------------------------------

Q.) 
#include <iostream>
int main() 
{ 
	int arr[3][4] = {
	         {2, 3, 4, 5},
	         {6, 7, 8, 9},
	         {10, 11, 12, 13}
	        };
    int (*ptr)[4]; 
    ptr = arr; 
    std::cout<<**ptr<< " "<<*(*(ptr + 1) + 2)<<" "<<*(*(ptr + 2) + 3)<<"\n"; 
    std::cout<<ptr[0][0]<<" "<<ptr[1][2]<<" "<<ptr[2][3]; 
    return 0; 
} 

Output: 2 8 13
        2 8 13

----------------------------------------------------------------------------

#include <iostream>
int main()
{
  int *ptr[10];
  int a[10] = {99, 11, 22, 33, 44, 55, 66, 77, 88, 19};
  *ptr = a;
  std::cout<<*ptr[0];
}

Output: 99

#include <iostream>
int main()
{
 int *ptr[10];
 int a[10] = {99, 11, 22, 33, 44, 55, 66, 77, 88, 19};
 *ptr = a;
 std::cout<<*ptr[5];
}

Output: GV

#include <iostream>
int main()
{
    int *ptr[4];
    int (*p)[5];
    int a[5] = {99, 11, 55, 66, 76};
    *ptr = a;
    p = &a;
    std::cout<<(*p)[3]<<"\n";
    std::cout<<*ptr[3];
}
Output: 66 GV

#include<iostream>
void display(int a, int b)
{
    std::cout<<a + 10<<"\n";
    std::cout<<b + 20;
}
int main()
{
    int arr[] = {25, 81, 45, 12};
    display(arr[1], arr[2]); 
    return 0;
}

Output: 91
        65


#include<iostream>
void display(int *a, int n);
int main()
{
   int arr[] = {25, 81, 45, 12};
   int n = sizeof(arr)/sizeof(arr[0]);
   display(arr, n); 
   return 0;
}
void display(int *a, int n)
{
   for(int i = 1; i < n; i = i + 2)
   {
      std::cout<<a[i]<<" ";
   }
}

Output: 81 12

#include<iostream>
void display(int *a)
{
  int n = sizeof(a)/sizeof(a[0]);
  for(int i = 0; i < n; i++)
  {
    std::cout<<a[i]<<" ";
  }
}
int main()
{
  int arr[] = {55, 34, 41, 32};
  display(arr); 
  return 0;
}

Output: 55 34

#include<iostream>
const int c = 3;
void print(int r, int a[][]) 
{ 
	int i, j; 
	for (i = 0; i < r; i++){
	  for (j = 0; j < c; j++) 
		  std::cout<<a[i][j]<<" ";
  	std::cout<<"\n";
	}
}
int main() 
{ 
	int arr[][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}; 
	print(3,arr); 
	return 0; 
} 

Output: Error
