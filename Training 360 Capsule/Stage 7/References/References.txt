Q.) 
#include <iostream>
int main() {
  int value{ 48 }; 
  int &ref{ value }; 
  std::cout<<ref<<std::endl;
  std::cout<<value <<std::endl;
  std::cout<<&value <<std::endl;
  std::cout<<&ref <<std::endl;
}

Output:
48
48
0x7ffc032cf2ec
0x7ffc032cf2ec

Q.) 
#include <iostream>
int main() {
  int value1{ 5 };
  int value2{ 6 };
  int &ref{ value1 }; 
  std::cout<<ref<<" ";
  ref = value2; 
  std::cout<<ref<<" ";
  ref = value2; 
  std::cout<<ref<<" ";
}

Output:
5 6 6 


Generally, the references that we have covered till now are called non-const references. 
Because, these references were aliases for non-const values.

Q.) 
#include<iostream>
int main()
{
  int value = 5;
  const int &ref = value; 
  value = 6; 
  ref = 7;
  std::cout<<value<<" "<<ref;
}

Output: Error

Q.) 
#include<iostream>
int main()
{
  const int &ref = 2 + 3; 
  std::cout << ref; 
}

Output: 5


SUMMARY:

1.) Three types of references

        - References to non-const values
        - References to const values
        - r-value references
2.) Unlike references to non-const values which can be initialized with non-const l-values, references to const values can be initialized with non-const l-value, const l-values, and r-values.
